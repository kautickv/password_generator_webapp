on: issue_comment

jobs:
  pr_commented:
    # This job only runs for pull request comments
    name: PR comment
    if: ${{ github.event.issue.pull_request && github.event.comment.body == 'Deploy' }}
    runs-on: ubuntu-latest
    steps:
      - uses: hashicorp/setup-terraform@v2

      - name: Checkout All Branches
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v6
      
      - name: Running on the default branch.
        if: steps.branch-name.outputs.is_default == 'true'
        run: |
          echo "Running on default: ${{ steps.branch-name.outputs.current_branch }}"
        # Outputs: "Running on default: main".
      
      - name: Running on a pull request branch.
        if: steps.branch-name.outputs.is_default == 'false'
        run: |
          echo "Running on pr: ${{ steps.branch-name.outputs.current_branch }}"
        # Outputs: "Running on pr: feature/test".
        
      - name: Terrafrom configuration check
        id: fmt
        working-directory: /home/runner/work/password_generator_webapp/password_generator_webapp/Infra
        run: |
          terraform fmt -check
          ls
        continue-on-error: true

      - name: Terraform Init
        id: init
        working-directory: /home/runner/work/password_generator_webapp/password_generator_webapp/Infra
        run: |
          terraform init
          ls

      - name: Terraform Validate
        id: validate
        working-directory: /home/runner/work/password_generator_webapp/password_generator_webapp/Infra
        run: |
          terraform validate
          ls

      - name: Terraform Plan
        id: plan
        working-directory: /home/runner/work/password_generator_webapp/password_generator_webapp/Infra
        run: |
          terraform plan
          ls

      - name: Terraform Apply
        working-directory: /home/runner/work/password_generator_webapp/password_generator_webapp/Infra
        run: terraform apply -auto-approve

        env:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: us-east-1