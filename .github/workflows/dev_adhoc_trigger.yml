## Checkout https://dev.to/zirkelc/trigger-github-workflow-for-comment-on-pull-request-45l2

on: issue_comment

jobs:
  pr_commented:
    # This job only runs for pull request comments
    name: PR comment
    if: ${{ github.event.issue.pull_request && github.event.comment.body == 'Deploy' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      issues: read
      pull-requests: read
      statuses: write

    steps:
      - uses: hashicorp/setup-terraform@v2

      # The above permission contents, issues and pull-requests permission are needed for this step
      - name: Get PR Branch
        uses: xt0rted/pull-request-comment-branch@v2
        id: comment-branch

      # Checkout the branch in the PR to run changes
      - name: Checkout PR Branch
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.comment-branch.outputs.head_ref }}

      # The above statuses permission are needed for this step.
      - name: Set latest commit status as pending
        uses: myrotvorets/set-commit-status-action@master
        with:
          sha: ${{ steps.comment-branch.outputs.head_sha }}
          token: ${{ secrets.GITHUB_TOKEN }}
          status: pending
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
            role-to-assume: arn:aws:iam::211125677766:role/pipeline-deployment-role
            aws-region: "us-east-1"

      - name: Setup Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      
      - name: Set execute permissions on bash script
        working-directory: ./.github
        run: |
          pwd
          ls
          chmod +x scripts/build_and_zip.sh
        
      - name: Build and zip python requirement file
        id: backend_build
        working-directory: ./.github
        run: |
          ./scripts/build_and_zip.sh

      - name: Terraform Init
        id: init
        working-directory: ./Infra/environments/dev
        run: |
          terraform init
          ls

      - name: Terraform Validate
        id: validate
        working-directory: ./Infra/environments/dev
        run: |
          terraform validate -no-color

      - name: Terraform Plan
        id: plan
        working-directory: ./Infra/environments/dev
        run: |
          terraform plan -out=tfplan
        continue-on-error: true

      - name: Terraform Apply
        working-directory: ./Infra/environments/dev
        run: terraform apply -auto-approve

      - name: Set latest commit status as ${{ job.status }}
        uses: myrotvorets/set-commit-status-action@master
        if: always()
        with:
          sha: ${{ steps.comment-branch.outputs.head_sha }}
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
